// <auto-generated />
using hostinpanda.library.DAL;
using hostinpanda.library.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace hostinpanda.library.Migrations
{
    [DbContext(typeof(DALdbContext))]
    [Migration("20180320004647_Added PortType")]
    partial class AddedPortType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("hostinpanda.library.DAL.Tables.HostCheckLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<int>("HostID");

                    b.Property<bool>("IsUp");

                    b.Property<DateTimeOffset>("Modified");

                    b.HasKey("ID");

                    b.HasIndex("HostID");

                    b.ToTable("HostLog");
                });

            modelBuilder.Entity("hostinpanda.library.DAL.Tables.Hosts", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<bool>("AlertsEnabled");

                    b.Property<int>("AllowableDowntimeMinutes");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("HostName");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<int>("PortNumber");

                    b.Property<int>("PortType");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("hostinpanda.library.DAL.Tables.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("hostinpanda.library.DAL.Tables.HostCheckLog", b =>
                {
                    b.HasOne("hostinpanda.library.DAL.Tables.Hosts", "Host")
                        .WithMany()
                        .HasForeignKey("HostID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("hostinpanda.library.DAL.Tables.Hosts", b =>
                {
                    b.HasOne("hostinpanda.library.DAL.Tables.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
